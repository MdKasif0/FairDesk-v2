
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to get the user's document from Firestore
    function getUserDoc(userId) {
      return get(/databases/$(database)/documents/users/$(userId));
    }
    
    // Helper function to get the incoming (request) user's document
    function getRequestingUserDoc() {
      return getUserDoc(request.auth.uid);
    }
    
    // Helper function to check if the requesting user is a member of a specific group
    function isMemberOfGroup(groupId) {
      return isSignedIn() && getRequestingUserDoc().data.groupId == groupId;
    }

    // Rule for the 'users' collection
    match /users/{userId} {
      // Allow a user to read or update their own document.
      allow read, update: if isSignedIn() && request.auth.uid == userId;
      // Allow a user to create their own document (on signup).
      allow create: if isSignedIn() && request.auth.uid == userId;
      // Allow a user to list all the documents in the 'users' collection
      // if they are querying for members of their own group.
      allow list: if isSignedIn() && isMemberOfGroup(request.query.filters[0].value);
    }
    
    // Rule for the 'groups' collection
    match /groups/{groupId} {
      // Allow a user to create a group if they are the creator specified in the document.
      allow create: if isSignedIn() && request.resource.data.creatorId == request.auth.uid;
      // Allow any member of the group to read it.
      allow read: if isMemberOfGroup(groupId);
      // Allow a member to update the group (e.g., waiting for friends), 
      // or allow a non-member to join by adding themselves to the members list if the group isn't locked.
      allow update: if isMemberOfGroup(groupId) || 
                       (isSignedIn() && !resource.data.isLocked && request.resource.data.members.hasAll(resource.data.members) && request.resource.data.members.hasAny([request.auth.uid]));
    }

    // This single rule covers all other group-related collections
    match /{collection}/{docId} {
      // Allow a user to list documents if they are querying by their own groupId.
      allow list: if (collection == 'seats' || collection == 'assignments' || collection == 'changeRequests')
                   && isSignedIn()
                   && isMemberOfGroup(request.query.filters[0].value);
      
      // Allow a user to get/read an individual document if they are a member of that document's group.
      allow get: if (collection == 'seats' || collection == 'assignments' || collection == 'changeRequests')
                  && isSignedIn()
                  && isMemberOfGroup(get(/databases/$(database)/documents/$(collection)/$(docId)).data.groupId);

      // Allow a user to write (create, update) a document if they are a member of its group.
      allow write: if (collection == 'seats' || collection == 'assignments' || collection == 'changeRequests')
                    && isSignedIn()
                    && isMemberOfGroup(request.resource.data.groupId);
    }
  }
}
