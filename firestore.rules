
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read other users' public data if authenticated.
    // A user can only create and update their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // A user can read a group's document if they are a member of that group.
    function isGroupMember(groupId) {
      return get(/databases/$(database)/documents/groups/$(groupId)).data.members.has(request.auth.uid);
    }

    match /groups/{groupId} {
      // Allow read if user is a member
      allow read: if isGroupMember(groupId);
      // Allow create by any authenticated user
      allow create: if request.auth != null;
      // Allow update if user is a member (for joining, locking, etc.)
      allow update: if isGroupMember(groupId);
    }
    
    match /seats/{seatId} {
      // Allow read/write to seats if user is a member of the group
      allow read, write: if isGroupMember(get(/databases/$(database)/documents/seats/$(seatId)).data.groupId);
    }
    
    match /assignments/{assignmentId} {
        // Allow read/write to assignments if user is a member of the group
        allow read, write: if isGroupMemb(request.resource.data.groupId)er(get(/databases/$(database)/documents/assignments/$(assignmentId)).data.groupId);
    }

    match /changeRequests/{requestId} {
        // Allow read/write to change requests if user is a member of the group
        allow read, write: if isGroupMember(get(/databases/$(database)/documents/changeRequests/$(requestId)).data.groupId);
    }
  }
}
